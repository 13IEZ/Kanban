{"version":3,"sources":["components/NavBar/image/avatar.svg","components/NavBar/NavBar.jsx","components/Footer/Footer.jsx","components/Layout/Layout.jsx","components/Kanban/Backlog/BacklogItem/BacklogItem.jsx","firebase.js","store/actionTypes.js","store/action.js","components/Kanban/Backlog/Backlog.jsx","components/Kanban/Ready/ReadyItem/ReadyItem.jsx","components/Kanban/Ready/Ready.jsx","components/Kanban/InProgress/InProgressItem/InProgressItem.jsx","components/Kanban/InProgress/InProgress.jsx","components/Kanban/Finished/FinishedItem/FinishedItem.jsx","components/Kanban/Finished/Finished.jsx","components/Kanban/Kanban.jsx","components/EditForm/EditForm.jsx","container/App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["NavBar","useState","clicked","setClicked","getMenuHandler","className","onClick","src","avatar","alt","style","display","Footer","backlogTasks","useSelector","state","finishedTasks","length","Date","toDateString","Layout","props","children","BacklogItem","elem","checkTitle","checkOutClick","newTask","setNewTask","useEffect","title","to","id","TextField","onBlur","e","onChange","autoFocus","disabled","multiline","variant","defaultValue","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","FETCH_STATUS_SUCCESS","ADD_INPUT_FIELD","MOVE_TASK_FORWARD","fetchStatusSuccess","tasks","type","payload","addInputField","status","updateStatus","lastUpdate","dispatch","ref","update","moveTaskForward","item","Backlog","useDispatch","checkAndSaveTitle","updateBacklogTask","target","value","map","dateCreation","toISOString","description","child","push","addNewTask","ReadyItem","checkClickedItem","Autocomplete","freeSolo","options","getOptionLabel","option","renderInput","params","event","console","log","Ready","disable","setDisable","readyTasks","currTarget","findIndex","copyItem","InProgressItem","InProgress","inProgressTasks","FinishedItem","Finished","Kanban","on","snapshot","exists","data","val","Object","keys","EditForm","history","useHistory","param","useParams","setTitle","setDescription","setStatus","once","monitorsChanges","onSubmit","preventDefault","updateEditableData","name","placeholder","closeHandler","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","filter","sort","a","b","getTime","copyReady","counter","copyInProgress","copyFinished","copyReadyArr","copyBack","sameTask","splice","copyInProgressArr","copyFinishedArr","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e3cf25f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.ba55084e.svg\";","import './NavBar.scss';\nimport avatar from './image/avatar.svg';\nimport {useState} from 'react';\n\nconst NavBar = () => {\n\tconst [clicked, setClicked] = useState(false);\n\n\tconst getMenuHandler = () => {\n\t\tif (clicked) setClicked(false);\n\t\telse setClicked(true);\n\t};\n\n\treturn (\n\t\t<nav className=\"NavBar\">\n\t\t\t<h1 className=\"NavBar__title\">Awesome Kanban Board</h1>\n\t\t\t<div className=\"NavBar__controls-panel\">\n\t\t\t\t<img onClick={getMenuHandler} className=\"NavBar__controls-panel__avatar\" src={avatar} alt=\"Not found\"/>\n\t\t\t\t<button onClick={getMenuHandler}\n\t\t\t\t\t\tclassName={`NavBar__controls-panel__arrow ${clicked ? 'up' : 'down'}`}/>\n\t\t\t</div>\n\t\t\t<div className=\"NavBar__drop-menu\" style={{display: clicked ? 'block' : 'none'}}>\n\t\t\t\t<ul className=\"NavBar__drop-menu__list\">\n\t\t\t\t\t<li>Profile</li>\n\t\t\t\t\t<li>Log out</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default NavBar;","import './Footer.scss';\nimport {useSelector} from 'react-redux';\n\nconst Footer = () => {\n\tconst backlogTasks = useSelector(state => state.backlogTasks);\n\tconst finishedTasks = useSelector(state => state.finishedTasks);\n\n\treturn (\n\t\t<div className=\"Footer\">\n\t\t\t<div className=\"Footer-left\">\n\t\t\t\t<p>Active tasks: {backlogTasks.length}</p>\n\t\t\t\t<p>Finished tasks: {finishedTasks.length}</p>\n\t\t\t</div>\n\t\t\t<div className=\"Footer-right\">\n\t\t\t\t<p>Kanban board by Igor Zakharov, {new Date().toDateString()}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Footer;","import './Layout.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\n\nconst Layout = props => (\n\t<div className=\"Layout\">\n\t\t<header className=\"Layout-header\">\n\t\t\t<NavBar/>\n\t\t</header>\n\t\t<main className=\"Layout-main\">\n\t\t\t{props.children}\n\t\t</main>\n\t\t<footer className=\"Layout-footer\">\n\t\t\t<Footer/>\n\t\t</footer>\n\t</div>\n);\n\nexport default Layout;","import TextField from '@material-ui/core/TextField';\nimport {useEffect, useState} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './BacklogItem.scss';\n\nconst BacklogItem = ({elem, checkTitle, checkOutClick}) => {\n\tconst [newTask, setNewTask] = useState(true);\n\n\tconst checkNewTask = () => {\n\t\tif (elem.title === '') setNewTask(true);\n\t\telse setNewTask(false);\n\t};\n\n\tconst checkBlur = () => {\n\t\tsetNewTask(false);\n\t\tcheckOutClick('out');\n\t};\n\n\tuseEffect(() => {\n\t\tcheckNewTask();\n\t}, []);\n\n\treturn (\n\t\t<NavLink className='Kanban-item__navlink' to={elem.title === '' ? `/` : `/${elem.id}`}>\n\t\t\t<div className='BacklogItem'>\n\t\t\t\t<TextField\n\t\t\t\t\tonBlur={(e) => checkBlur(e)}\n\t\t\t\t\tonChange={(e) => checkTitle(e, elem.id)}\n\t\t\t\t\tautoFocus={newTask ? true : false}\n\t\t\t\t\tdisabled={newTask ? false : true}\n\t\t\t\t\tclassName='Kanban-item__task'\n\t\t\t\t\tid='filled-textarea'\n\t\t\t\t\tmultiline\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tdefaultValue={elem.title}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</NavLink>\n\t);\n};\n\nexport default BacklogItem;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nfirebase.initializeApp({\n\tapiKey: 'AIzaSyArjndnyd4qx4nFfgDNDhNN9DfrXNflQZM',\n\tauthDomain: 'igor-zakharov.firebaseapp.com',\n\tdatabaseURL: 'https://igor-zakharov-default-rtdb.firebaseio.com',\n\tprojectId: 'igor-zakharov',\n\tstorageBucket: 'igor-zakharov.appspot.com',\n\tmessagingSenderId: '79613404887',\n\tappId: '1:79613404887:web:3b3da7dbd00dc8571db292'\n});\n\nconst db = firebase.database();\n\nexport default db;","export const FETCH_STATUS_SUCCESS = 'FETCH_STATUS_SUCCESS';\nexport const ADD_INPUT_FIELD = 'ADD_INPUT_FIELD';\nexport const MOVE_TASK_FORWARD = 'MOVE_TASK_FORWARD';\n","import db from '../firebase';\nimport {ADD_INPUT_FIELD, FETCH_STATUS_SUCCESS, MOVE_TASK_FORWARD} from './actionTypes';\n\nconst fetchStatusSuccess = (tasks) => {\n\treturn {type: FETCH_STATUS_SUCCESS, payload: tasks};\n};\n\nexport const addNewTask = (title, description, status, dateCreation, lastUpdate) => {\n\treturn dispatch => {\n\t\tdb.ref('kanban').child('tasks').push({\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\tstatus,\n\t\t\tdateCreation,\n\t\t\tlastUpdate\n\t\t});\n\t};\n};\n\nexport const addInputField = status => {\n\treturn {type: ADD_INPUT_FIELD, payload: status};\n};\n\nexport const updateStatus = (id, status, lastUpdate) => {\n\treturn dispatch => db.ref(`kanban/tasks/${id}`).update({status, lastUpdate});\n};\n\nexport const updateEditableData = (id, status, lastUpdate, title, description) => {\n\treturn dispatch => db.ref(`kanban/tasks/${id}`).update({status, lastUpdate, title, description});\n};\n\nexport const moveTaskForward = (item, type) => {\n\treturn {type: MOVE_TASK_FORWARD, payload: item, status: type};\n};\n\nexport const updateBacklogTask = (id, title) => {\n\treturn dispatch => db.ref(`kanban/tasks/${id}`).update({title});\n};\n\n\nexport const fetchTasks = () => {\n\treturn dispatch => {\n\t\tdb.ref('kanban/tasks').on('value', (snapshot) => {\n\t\t\tif (snapshot.exists()) {\n\t\t\t\tconst data = snapshot.val();\n\t\t\t\tdispatch(\n\t\t\t\t\tfetchStatusSuccess(\n\t\t\t\t\t\tObject.keys(data).map((id) => {\n\t\t\t\t\t\t\treturn {...data[id], id};\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdispatch(fetchStatusSuccess([]));\n\t\t\t}\n\t\t});\n\t};\n};\n","import {useState} from 'react';\nimport BacklogItem from './BacklogItem/BacklogItem';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addNewTask, updateBacklogTask} from '../../../store/action';\n\nconst Backlog = () => {\n\tconst backlogTasks = useSelector((state) => state.backlogTasks);\n\tconst [clicked, setClicked] = useState(false);\n\tconst dispatch = useDispatch();\n\n\tconst checkAndSaveTitle = (e, id) => {\n\t\tdispatch(updateBacklogTask(id, e.target.value));\n\t};\n\n\tconst addTaskHandler = () => {\n\t\tconst dateCreation = new Date().toISOString();\n\t\tsetClicked(true);\n\t\tdispatch(addNewTask('', '', 'backlog', dateCreation, ''));\n\t};\n\n\tconst submitHandler = () => {\n\t\tsetClicked(false);\n\t};\n\n\tconst checkOutClick = status => {\n\t\tif (status === 'out') setClicked(false);\n\t};\n\n\treturn (\n\t\t<div className='Kanban-item'>\n\t\t\t<h2 className='Kanban-item__title'>Backlog</h2>\n\t\t\t{backlogTasks.map((elem) => (\n\t\t\t\t<BacklogItem\n\t\t\t\t\tkey={elem.id}\n\t\t\t\t\telem={elem}\n\t\t\t\t\tcheckTitle={checkAndSaveTitle}\n\t\t\t\t\tcheckOutClick={checkOutClick}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<button\n\t\t\t\tonClick={addTaskHandler}\n\t\t\t\tclassName='Kanban-item__add-btn'\n\t\t\t\tstyle={{display: clicked ? 'none' : 'block'}}>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName='Kanban-item__submit-btn'\n\t\t\t\tonClick={submitHandler}\n\t\t\t\tstyle={{display: clicked ? 'block' : 'none'}}>\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Backlog;\n","import TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport './ReadyItem.scss';\nimport {useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\n\nconst ReadyItem = ({checkClickedItem, elem}) => {\n\tconst backlogTasks = useSelector((state) => state.backlogTasks);\n\n\treturn (\n\t\t<NavLink className='Kanban-item__navlink' to={elem.title === '' ? `/` : `/${elem.id}`}>\n\t\t\t<div className='ReadyItem'>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tdefaultValue={elem.title !== '' ? elem : null}\n\t\t\t\t\tid='combo-box-demo'\n\t\t\t\t\tfreeSolo={elem.title !== ''}\n\t\t\t\t\tdisabled={elem.title !== ''}\n\t\t\t\t\tclassName='ReadyItem__autocomplete'\n\t\t\t\t\toptions={backlogTasks}\n\t\t\t\t\tgetOptionLabel={(option) => option.title}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField {...params} variant='outlined' multiline/>\n\t\t\t\t\t)}\n\t\t\t\t\tonChange={(event, value) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcheckClickedItem(value.id);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.log('Null');\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</NavLink>\n\t);\n};\n\nexport default ReadyItem;\n","import {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport ReadyItem from './ReadyItem/ReadyItem';\nimport {addInputField, moveTaskForward, updateStatus} from '../../../store/action';\n\nconst Ready = () => {\n\tconst [disable, setDisable] = useState(true);\n\tconst backlogTasks = useSelector((state) => state.backlogTasks);\n\tconst readyTasks = useSelector((state) => state.readyTasks);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (backlogTasks.length > 0) setDisable(false);\n\t\telse setDisable(true);\n\t}, [backlogTasks]);\n\n\tconst addNewReadyHandler = () => {\n\t\tsetDisable(true);\n\t\tdispatch(addInputField('ready'));\n\t};\n\n\tconst checkClickedItem = id => {\n\t\tconst currTarget = backlogTasks.findIndex((elem) => elem.id === id);\n\t\tconst copyItem = {...backlogTasks[currTarget]};\n\t\tconst lastUpdate = new Date().toISOString();\n\t\tdispatch(moveTaskForward(copyItem, 'ready'));\n\t\tdispatch(updateStatus(id, 'ready', lastUpdate));\n\t\tsetDisable(false);\n\t};\n\n\treturn (\n\t\t<div className='Kanban-item'>\n\t\t\t<h2 className='Kanban-item__title'>Ready</h2>\n\t\t\t{readyTasks.map((elem) => (\n\t\t\t\t<ReadyItem\n\t\t\t\t\tkey={elem.id}\n\t\t\t\t\telem={elem}\n\t\t\t\t\tcheckClickedItem={checkClickedItem}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<button\n\t\t\t\tonClick={addNewReadyHandler}\n\t\t\t\tdisabled={disable}\n\t\t\t\tclassName='Kanban-item__add-btn'>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Ready;\n","import './InProgressItem.scss';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport {useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\n\nconst InProgressItem = ({elem, checkClickedItem}) => {\n\tconst readyTasks = useSelector(state => state.readyTasks);\n\n\treturn (\n\t\t<NavLink className='Kanban-item__navlink' to={elem.title === '' ? `/` : `/${elem.id}`}>\n\t\t\t<div className='InProgressItem'>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tdefaultValue={elem.title !== '' ? elem : null}\n\t\t\t\t\tid='combo-box-demo'\n\t\t\t\t\tfreeSolo={elem.title !== ''}\n\t\t\t\t\tdisabled={elem.title !== ''}\n\t\t\t\t\tclassName='InProgressItem__autocomplete'\n\t\t\t\t\toptions={readyTasks}\n\t\t\t\t\tgetOptionLabel={(option) => option.title}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField {...params} variant='outlined' multiline/>\n\t\t\t\t\t)}\n\t\t\t\t\tonChange={(event, value) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcheckClickedItem(value.id);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.log('Null');\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</NavLink>\n\t);\n};\n\nexport default InProgressItem;","import {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addInputField, moveTaskForward, updateStatus} from '../../../store/action';\nimport InProgressItem from './InProgressItem/InProgressItem';\n\nconst InProgress = () => {\n\tconst [disable, setDisable] = useState(false);\n\tconst readyTasks = useSelector(state => state.readyTasks);\n\tconst inProgressTasks = useSelector(state => state.inProgressTasks);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (readyTasks.length > 0) setDisable(false);\n\t\telse setDisable(true);\n\t}, [readyTasks]);\n\n\tconst addNewInProgressHandler = () => {\n\t\tsetDisable(true);\n\t\tdispatch(addInputField('in progress'));\n\t};\n\n\tconst checkClickedItem = id => {\n\t\tconst currTarget = readyTasks.findIndex(elem => elem.id === id);\n\t\tconst copyItem = {...readyTasks[currTarget]};\n\t\tconst lastUpdate = new Date().toISOString();\n\t\tdispatch(moveTaskForward(copyItem, 'in progress'));\n\t\tdispatch(updateStatus(id, 'in progress', lastUpdate));\n\t\tsetDisable(false);\n\t};\n\n\treturn (\n\t\t<div className='Kanban-item'>\n\t\t\t<h2 className='Kanban-item__title'>In Progress</h2>\n\t\t\t{inProgressTasks.map((elem) => (\n\t\t\t\t<InProgressItem key={elem.id} elem={elem} checkClickedItem={checkClickedItem}/>\n\t\t\t))}\n\t\t\t<button\n\t\t\t\tonClick={addNewInProgressHandler}\n\t\t\t\tdisabled={disable}\n\t\t\t\tclassName='Kanban-item__add-btn'>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default InProgress;","import './FinishedItem.scss';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\n\nconst FinishedItem = ({checkClickedItem, elem}) => {\n\tconst inProgressTasks = useSelector((state) => state.inProgressTasks);\n\n\treturn (\n\t\t<NavLink className='Kanban-item__navlink' to={elem.title === '' ? `/` : `/${elem.id}`}>\n\t\t\t<div className='FinishedItem'>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tdefaultValue={elem.title !== '' ? elem : null}\n\t\t\t\t\tid='combo-box-demo'\n\t\t\t\t\tfreeSolo={elem.title !== ''}\n\t\t\t\t\tdisabled={elem.title !== ''}\n\t\t\t\t\tclassName='FinishedItem__autocomplete'\n\t\t\t\t\toptions={inProgressTasks}\n\t\t\t\t\tgetOptionLabel={(option) => option.title}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField {...params} variant='outlined' multiline/>\n\t\t\t\t\t)}\n\t\t\t\t\tonChange={(event, value) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcheckClickedItem(value.id);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.log('Null');\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</NavLink>\n\t);\n};\n\nexport default FinishedItem;\n","import {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addInputField, moveTaskForward, updateStatus} from '../../../store/action';\nimport FinishedItem from './FinishedItem/FinishedItem';\n\nconst Finished = () => {\n\tconst [disable, setDisable] = useState(true);\n\tconst inProgressTasks = useSelector((state) => state.inProgressTasks);\n\tconst finishedTasks = useSelector((state) => state.finishedTasks);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (inProgressTasks.length > 0) setDisable(false);\n\t\telse setDisable(true);\n\t}, [inProgressTasks]);\n\n\tconst addNewFinishedHandler = () => {\n\t\tsetDisable(true);\n\t\tdispatch(addInputField('finished'));\n\t};\n\n\tconst checkClickedItem = id => {\n\t\tconst currTarget = inProgressTasks.findIndex((elem) => elem.id === id);\n\t\tconst copyItem = {...inProgressTasks[currTarget]};\n\t\tconst lastUpdate = new Date().toISOString();\n\t\tdispatch(moveTaskForward(copyItem, 'finished'));\n\t\tdispatch(updateStatus(id, 'finished', lastUpdate));\n\t\tsetDisable(false);\n\t};\n\n\treturn (\n\t\t<div className='Kanban-item'>\n\t\t\t<h2 className='Kanban-item__title'>Finished</h2>\n\t\t\t{finishedTasks.map((elem) => (\n\t\t\t\t<FinishedItem\n\t\t\t\t\tkey={elem.id}\n\t\t\t\t\telem={elem}\n\t\t\t\t\tcheckClickedItem={checkClickedItem}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<button\n\t\t\t\tonClick={addNewFinishedHandler}\n\t\t\t\tdisabled={disable}\n\t\t\t\tclassName='Kanban-item__add-btn'>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Finished;\n","import './Kanban.scss';\nimport Backlog from './Backlog/Backlog';\nimport {useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {fetchTasks} from '../../store/action';\nimport Ready from './Ready/Ready';\nimport InProgress from './InProgress/InProgress';\nimport Finished from './Finished/Finished';\n\nconst Kanban = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchTasks());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"Kanban\">\n\t\t\t<Backlog/>\n\t\t\t<Ready/>\n\t\t\t<InProgress/>\n\t\t\t<Finished/>\n\t\t</div>\n\t);\n};\n\nexport default Kanban;\n","import './EditForm.scss';\nimport {useHistory, useParams} from 'react-router';\nimport {useEffect, useState} from 'react';\nimport db from '../../firebase';\nimport {useDispatch} from 'react-redux';\nimport {updateEditableData} from '../../store/action';\n\nconst EditForm = () => {\n\tconst history = useHistory();\n\tconst param = useParams();\n\tconst dispatch = useDispatch();\n\tconst [title, setTitle] = useState('');\n\tconst [description, setDescription] = useState('');\n\tconst [status, setStatus] = useState('');\n\n\tuseEffect(() => {\n\t\tdb.ref(`kanban/tasks/${param.id}`).once('value', snapshot => {\n\t\t\tsetTitle(snapshot.val().title);\n\t\t\tsetDescription(snapshot.val().description);\n\t\t\tsetStatus(snapshot.val().status);\n\t\t});\n\t}, [param]);\n\n\tconst monitorsChanges = (e, type) => {\n\t\tif (type === 'title') setTitle(e.target.value);\n\t\telse if (type === 'status') setStatus(e.target.value);\n\t\telse if (type === 'description') setDescription(e.target.value);\n\t};\n\n\tconst closeHandler = e => {\n\t\te.preventDefault();\n\t\thistory.push('/');\n\t};\n\n\tconst submitHandler = e => {\n\t\te.preventDefault();\n\t\tconst lastUpdate = new Date().toISOString();\n\t\tdispatch(updateEditableData(param.id, status, lastUpdate, title, description));\n\t\thistory.push('/');\n\t};\n\n\treturn <form className=\"EditForm\" onSubmit={submitHandler}>\n\t\t<div className=\"EditForm-item\">\n\t\t\t<input className=\"EditForm__input-title\" type=\"text\" value={title}\n\t\t\t\t   onChange={(e) => monitorsChanges(e, 'title')}/>\n\t\t\t<select className=\"EditForm__select\" value={status} name=\"status\"\n\t\t\t\t\tonChange={(e) => monitorsChanges(e, 'status')}>\n\t\t\t\t<option value=\"backlog\">Backlog</option>\n\t\t\t\t<option value=\"ready\">Ready</option>\n\t\t\t\t<option value=\"in progress\">In Progress</option>\n\t\t\t\t<option value=\"finished\">Finished</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div className=\"EditForm-item\">\n\t\t\t<textarea className=\"EditForm__description\" placeholder=\"Add description\" value={description}\n\t\t\t\t\t  onChange={(e) => monitorsChanges(e, 'description')}/>\n\t\t</div>\n\t\t<button className=\"EditForm__close\" onClick={(e) => closeHandler(e)}/>\n\t\t<div className=\"EditForm-item\">\n\t\t\t<button className=\"Kanban-item__submit-btn EditForm__btn\">Submit</button>\n\t\t</div>\n\t</form>;\n};\n\nexport default EditForm;\n","import {Route, Switch} from 'react-router-dom';\nimport Layout from '../components/Layout/Layout';\nimport Kanban from '../components/Kanban/Kanban';\nimport EditForm from '../components/EditForm/EditForm';\n\nfunction App() {\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/:id' component={EditForm}/>\n\t\t\t\t<Route path='/' component={Kanban}/>\n\t\t\t</Switch>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_INPUT_FIELD, FETCH_STATUS_SUCCESS, MOVE_TASK_FORWARD} from './actionTypes';\n\nconst initialState = {\n\ttasks: [],\n\tbacklogTasks: [],\n\treadyTasks: [],\n\tinProgressTasks: [],\n\tfinishedTasks: []\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_STATUS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttasks: action.payload,\n\t\t\t\tbacklogTasks: action.payload.filter(elem => elem.status === 'backlog').sort((a, b) => new Date(a.dateCreation).getTime() > new Date(b.dateCreation).getTime() ? 1 : -1),\n\t\t\t\treadyTasks: action.payload.filter(elem => elem.status === 'ready').sort((a, b) => new Date(a.lastUpdate).getTime() > new Date(b.lastUpdate).getTime() ? 1 : -1),\n\t\t\t\tinProgressTasks: action.payload.filter(elem => elem.status === 'in progress').sort((a, b) => new Date(a.lastUpdate).getTime() > new Date(b.lastUpdate).getTime() ? 1 : -1),\n\t\t\t\tfinishedTasks: action.payload.filter(elem => elem.status === 'finished').sort((a, b) => new Date(a.lastUpdate).getTime() > new Date(b.lastUpdate).getTime() ? 1 : -1)\n\t\t\t};\n\t\tcase ADD_INPUT_FIELD:\n\t\t\tif (action.payload === 'ready') {\n\t\t\t\tconst copyReady = [...state.readyTasks];\n\t\t\t\tcopyReady.push({title: '', description: '', id: '', status: '', counter: 0});\n\t\t\t\treturn {...state, readyTasks: copyReady};\n\t\t\t} else if (action.payload === 'in progress') {\n\t\t\t\tconst copyInProgress = [...state.inProgressTasks];\n\t\t\t\tcopyInProgress.push({title: '', description: '', id: '', status: '', counter: 0});\n\t\t\t\treturn {...state, inProgressTasks: copyInProgress};\n\t\t\t} else {\n\t\t\t\tconst copyFinished = [...state.finishedTasks];\n\t\t\t\tcopyFinished.push({title: '', description: '', id: '', status: '', counter: 0});\n\t\t\t\treturn {...state, finishedTasks: copyFinished};\n\t\t\t}\n\t\tcase MOVE_TASK_FORWARD:\n\t\t\tif (action.status === 'ready') {\n\t\t\t\tconst copyReadyArr = [...state.readyTasks];\n\t\t\t\tcopyReadyArr[copyReadyArr.length - 1] = action.payload;\n\t\t\t\tconst copyBack = [...state.backlogTasks];\n\t\t\t\tconst sameTask = copyBack.findIndex(elem => elem.id === action.payload.id);\n\t\t\t\tcopyBack.splice(sameTask, 1);\n\t\t\t\treturn {...state, readyTasks: copyReadyArr, backlogTasks: copyBack};\n\t\t\t} else if (action.status === 'in progress') {\n\t\t\t\tconst copyInProgressArr = [...state.inProgressTasks];\n\t\t\t\tcopyInProgressArr[copyInProgressArr.length - 1] = action.payload;\n\t\t\t\tconst copyReady = [...state.readyTasks];\n\t\t\t\tconst sameTask = copyReady.findIndex(elem => elem.id === action.payload.id);\n\t\t\t\tcopyReady.splice(sameTask, 1);\n\t\t\t\treturn {...state, inProgressTasks: copyInProgressArr, readyTasks: copyReady};\n\t\t\t} else {\n\t\t\t\tconst copyFinishedArr = [...state.finishedTasks];\n\t\t\t\tcopyFinishedArr[copyFinishedArr.length - 1] = action.payload;\n\t\t\t\tconst copyInProgress = [...state.inProgressTasks];\n\t\t\t\tconst sameTask = copyInProgress.findIndex(elem => elem.id === action.payload.id);\n\t\t\t\tcopyInProgress.splice(sameTask, 1);\n\t\t\t\treturn {...state, inProgressTasks: copyInProgress, finishedTasks: copyFinishedArr};\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport reducer from './store/reducer';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App/>\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\nReactDOM.render(\n\tapp,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}